name: Build Windows Executable and Release

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if (Test-Path requirements.txt) { pip install -r requirements.txt }

      - name: Get next version tag
        id: get_version
        run: |
          $tags = git tag --sort=-v:refname | Where-Object { $_ -match '^v\d+\.\d+\.\d+$' }
          if ($tags.Length -eq 0) {
            $next = "v0.1.0"
          } else {
            $latest = $tags[0]
            $parts = $latest.TrimStart("v").Split(".")
            $major = [int]$parts[0]
            $minor = [int]$parts[1]
            $patch = [int]$parts[2] + 1
            $next = "v$major.$minor.$patch"
          }
          echo "next_version=$next" >> $env:GITHUB_ENV
          echo "tag_name=$next" >> $env:GITHUB_OUTPUT

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile --noconsole --icon=expcalcs.ico --name expcalcs app.py

      - name: Bundle executable and config
        run: |
          mkdir bundle
          copy dist\expcalcs.exe bundle\
          copy config.json bundle\
          copy expcalcs.ico bundle\
          Compress-Archive -Path bundle\* -DestinationPath expcalcs_bundle.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.tag_name }}
          name: Release ${{ steps.get_version.outputs.tag_name }}
          files: expcalcs_bundle.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
